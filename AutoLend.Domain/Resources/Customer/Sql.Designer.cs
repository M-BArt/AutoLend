//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoLend.Data.Resources.Customer {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoLend.Data.Resources.Customer.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu INSERT INTO dbo.Customers 
        ///	(
        ///	[Id],
        ///	[CreateDate],
        ///	[ModifyDate],
        ///	[Firstname], 
        ///	[Lastname], 
        ///	[Email], 
        ///	[Phone], 
        ///	[Address],
        ///	[LicenseNumber],
        ///	[DateOfBirth],
        ///	[isActive]) 
        ///VALUES
        ///	(
        ///	NEWID(),
        ///	GETDATE(),
        ///	NULL,
        ///	@Firstname, 
        ///	@Lastname, 
        ///	@Email, 
        ///	@Phone, 
        ///	@Address,
        ///	@LicenseNumber,
        ///	@DateOfBirth,
        ///	1
        ///	)
        ///SELECT Scope_Identity().
        /// </summary>
        internal static string Customer_Create {
            get {
                return ResourceManager.GetString("Customer_Create", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu UPDATE [dbo].[Customers]
        ///SET 
        ///	[IsActive] = 0, 
        ///	[ModifyDate] = GETDATE()
        ///WHERE 
        ///	[Id] = @customerId 
        ///AND [IsActive] = 1;
        ///
        ///UPDATE [dbo].[Reservations]
        ///SET 
        ///	[ModifyDate] = GETDATE(),
        ///	[StatusId] = 2,
        ///	[IsActive] = 0
        ///WHERE 
        ///	[dbo].[Reservation].[CustomerId] = @customerId
        ///AND [dbo].[Reservation].[IsActive] = 1;
        ///
        ///UPDATE [dbo].[Cars]
        ///SET
        ///	[ModifyDate] = GETDATE(),
        ///	[IsAvailable] = 1
        ///WHERE
        ///	[Car].[Id] = (SELECT [Car].[Id] FROM [dbo].[Rentals] WHERE [CustomerId] = @customerId AND [IsActive]  [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string Customer_Delete {
            get {
                return ResourceManager.GetString("Customer_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu SELECT 
        ///	[CU].[Id], 
        ///	[CU].[CreateDate], 
        ///	[CU].[ModifyDate], 
        ///	[CU].[FirstName], 
        ///	[CU].[LastName], 
        ///	[CU].[Email], 
        ///	[CU].[LicenseNumber], 
        ///	[CU].[Phone], 
        ///	[CU].[DateofBirth], 
        ///	[CU].[HasActiveRental],
        ///	[CU].[Address]
        ///FROM 
        ///	[dbo].[Customers] AS [CU]
        ///WHERE
        ///	[CU].[IsActive] = 1;.
        /// </summary>
        internal static string Customer_GetAll {
            get {
                return ResourceManager.GetString("Customer_GetAll", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu SELECT  
        ///    [CU].[Id],
        ///    [CU].[CreateDate],
        ///    [CU].[ModifyDate],
        ///    [CU].[FirstName],
        ///    [CU].[LastName],
        ///    [CU].[Email],
        ///    [CU].[LicenseNumber],
        ///    [CU].[Phone],
        ///    [CU].[Address],
        ///    [CU].[DateOfBirth],
        ///    [CU].[HasActiveRental],
        ///    [CU].[Cost]
        ///FROM 
        ///	[dbo].[Customers] AS [CU]
        ///WHERE 
        ///	[CU].[Id] = @customerId
        ///AND	[CU].[IsActive] = 1;
        ///.
        /// </summary>
        internal static string Customer_GetById {
            get {
                return ResourceManager.GetString("Customer_GetById", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu SELECT 
        ///	[CU].[Id],
        ///	[CU].[LicenseNumber],
        ///	[CU].[FirstName],
        ///	[CU].[LastName],
        ///	[CU].[Email],
        ///	[CU].[HasActiveRental]
        ///FROM 
        ///	[dbo].[Customers] AS [CU]
        ///WHERE
        ///	[LicenseNumber] = @licenseNumber
        ///AND [IsActive] = 1.
        /// </summary>
        internal static string Customer_GetByLicenseNumber {
            get {
                return ResourceManager.GetString("Customer_GetByLicenseNumber", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu IF @Field = &apos;Email&apos;
        ///    BEGIN
        ///        SELECT CASE
        ///            WHEN EXISTS (
        ///                SELECT 1
        ///                FROM [dbo].[Customers]
        ///                WHERE [Email] = @Value
        ///                AND (@ExcludeCustomerId IS NULL OR Id != @ExcludeCustomerId)
        ///            )
        ///            THEN 1
        ///            ELSE 0
        ///        END;
        ///    END
        ///IF @Field = &apos;LicenseNumber&apos;
        ///    BEGIN
        ///        SELECT CASE
        ///            WHEN EXISTS (
        ///                SELECT 1
        ///                FROM [dbo].[Customers]
        ///                 [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string Customer_IsCustomerFieldUnique {
            get {
                return ResourceManager.GetString("Customer_IsCustomerFieldUnique", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu UPDATE CU
        ///	SET 
        ///		[CU].[FirstName]		= COALESCE(NULLIF(@FirstName, &apos;&apos;), C.FirstName),
        ///		[CU].[LastName]			= COALESCE(NULLIF(@LastName, &apos;&apos;), C.LastName),
        ///		[CU].[LicenseNumber]	= COALESCE(NULLIF(@LicenseNumber, &apos;&apos;), C.LicenseNumber),
        ///		[CU].[Phone]			= COALESCE(NULLIF(@Phone, &apos;&apos;), C.Phone),
        ///		[CU].[Address]			= COALESCE(NULLIF(@Address, &apos;&apos;), C.Address),
        ///		[CU].[ModifyDate]		= GETDATE()
        ///	FROM 
        ///		[dbo].[Customers] AS [CU]
        ///	WHERE 
        ///		[CU].[Id] = @Id
        ///	AND [IsActive] = 1;
        ///
        ///IF @DateOfBirth IS NOT NULL        /// [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string Customer_Update {
            get {
                return ResourceManager.GetString("Customer_Update", resourceCulture);
            }
        }
    }
}
