//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoLend.Data.Resources.Rental {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AutoLend.Data.Resources.Rental.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu DECLARE @CustomerId CHAR(36) = (
        ///	SELECT 
        ///		dbo.Customers.Id 
        ///	FROM 
        ///		dbo.Customers 
        ///	WHERE 
        ///			LicenseNumber = @LicenseNumber
        ///		AND IsActive = 1
        ///	)
        ///
        ///DECLARE @CarId INT = (
        ///	SELECT 
        ///		dbo.Cars .Id 
        ///	FROM 
        ///		dbo.Cars 
        ///	WHERE 
        ///		LicensePlate = @LicensePlate
        ///	AND IsActive = 1
        ///	)
        ///
        ///DECLARE @StatusId INT = (
        ///	SELECT 
        ///		Id 
        ///	FROM 
        ///		dbo.Status 
        ///	WHERE 
        ///			StatusName = &apos;Confirmed&apos;
        /// 		AND IsActive = 1
        ///	)
        ///
        ///BEGIN
        ///INSERT INTO dbo.Rental
        ///	(
        ///	[CreateDate],
        ///    [ModifyDate],
        ///    [CarId] [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string Rental_Create {
            get {
                return ResourceManager.GetString("Rental_Create", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu UPDATE dbo.Rental
        ///SET isActive = 0 
        ///WHERE id = @rentalId AND isActive = 1;.
        /// </summary>
        internal static string Rental_Delete {
            get {
                return ResourceManager.GetString("Rental_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu SELECT
        ///	RE.Id,
        ///	RE.CreateDate,
        ///	RE.ModifyDate,
        ///	CA.LicensePlate,
        ///	M.ModelName,
        ///	B.BrandName,
        ///	CU.FirstName,
        ///	CU.LastName,
        ///	CU.LicenseNumber,
        ///	RE.RentalDate,
        ///	RE.ReturnDate,
        ///	S.StatusName,
        ///	RE.TotalCost
        ///
        ///FROM dbo.Rental					AS RE
        ///	INNER JOIN dbo.Cars			AS CA	ON RE.CarId = CA.Id
        ///	INNER JOIN dbo.Customers	AS CU	ON RE.CustomerId = CU.Id
        ///	INNER JOIN dbo.Models		AS M	ON CA.ModelId = M.Id
        ///	INNER JOIN dbo.Brands		AS B	ON M.BrandId = B.Id
        ///	INNER JOIN dbo.Status		AS S	ON RE.StatusId = S.Id
        ///
        ///WHER [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string Rental_GetAll {
            get {
                return ResourceManager.GetString("Rental_GetAll", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu IF 
        ///(EXISTS (SELECT 1 FROM dbo.Rental WHERE Id = @rentalId AND IsActive = 0)) 
        ///OR (NOT EXISTS (SELECT 1 FROM dbo.Rental WHERE Id = @rentalId AND IsActive = 1)) 
        ///BEGIN RAISERROR (&apos;Rental not found or is not active.&apos;,16, 1) END
        ///ELSE
        ///
        ///SELECT
        ///	RE.Id,
        ///	RE.CreateDate,
        ///	RE.ModifyDate,
        ///	CA.LicensePlate,
        ///	M.ModelName,
        ///	B.BrandName,
        ///	CU.FirstName,
        ///	CU.LastName,
        ///	CU.LicenseNumber,
        ///	RE.RentalDate,
        ///	RE.ReturnDate,
        ///	S.StatusName,
        ///	RE.TotalCost
        ///
        ///FROM dbo.Rental					AS RE
        ///	INNER JOIN dbo.Cars			AS CA	 [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        internal static string Rental_GetById {
            get {
                return ResourceManager.GetString("Rental_GetById", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu .
        /// </summary>
        internal static string Rental_Update {
            get {
                return ResourceManager.GetString("Rental_Update", resourceCulture);
            }
        }
    }
}
